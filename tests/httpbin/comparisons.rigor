name: Comparisons
format: "1.0"
host: https://httpbin.org

scenarios:
    - compare: equals

steps:

  - description: Do a get just to do the comparison validations.

    request:
        path: /get

    validate:
      - actual: 1
        compare: equals
        expect: 1
      - actual: '2'
        compare: equals
        expect: 2
      - actual: 1
        compare: '{scenario.compare}'
        expect: 1

      - actual: [1, 2]
        compare: same
        expect: [2, 1]
      - actual: [1, 2, 3]
        compare: not same
        expect: [2, 1]
      - actual: [1, 1]
        compare: not same
        expect: [1]

      - actual: 2
        compare: not equals
        expect: 1

      - actual: [1, 2, 3]
        compare: contains
        expect: 3
      - actual: [1, 2, 3]
        compare: not contains
        expect: 4

      - actual: 1
        compare: in
        expect: [1, 2, 3]
      - actual: 4
        compare: not in
        expect: [1, 2, 3]

      - actual: 4
        compare: greater than
        expect: 2
      - actual: 4
        compare: gt
        expect: 2
      - actual: 4
        compare: greater than or equals
        expect: 4
      - actual: 4
        compare: gte
        expect: 4

      - actual: 4
        compare: less than
        expect: 5
      - actual: 4
        compare: lt
        expect: 5
      - actual: 4
        compare: less than or equals
        expect: 4
      - actual: 4
        compare: lte
        expect: 4

      - actual: 1
        compare: type
        expect: int
      - actual: 1.1
        compare: type
        expect: float
      - actual: hello, world.
        compare: type
        expect: str
      - actual: { first: "amelia", last: "earhart" }
        compare: type
        expect: dict
      - actual: [2, 3]
        compare: type
        expect: list

      - actual: '000-00-0000'
        compare: regex
        expect: \d{{3}}-\d{{2}}-\d{{4}}
      - actual: John Q. Public
        compare: regex
        expect: \w+ \w\. \w+

      - actual: [2, 3]
        compare: length
        expect: 2
      - actual: []
        compare: length
        expect: 0
      - actual: 'hello'
        compare: length
        expect: 5
      - actual: [2]
        compare: subset
        expect: [2, 3]
      - actual: [1, 2, 3]
        compare: not subset
        expect: [2, 3]
      - actual: [1, 2, 3]
        compare: superset
        expect: [2, 3]
      - actual: [2, 3]
        compare: not superset
        expect: [1, 2, 3]

      - actual:
            first_name: John
            last_name: Doe
            middle_name: Qunicy
            age: 99
        compare: keyset
        expect:
            - age
            - first_name
            - last_name
            - middle_name
      - actual:
            first_name: John
            last_name: Doe
            middle_name: Qunicy
        compare: not keyset
        expect:
            - age
            - first_name
            - last_name
            - middle_name
